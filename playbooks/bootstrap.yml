- hosts: all
  become: yes
  become_method: sudo
  become_user: root
  gather_facts: no
  vars: # Hash512 created with: # python -c 'import crypt,getpass; print(crypt.crypt(getpass.getpass(), crypt.mksalt(crypt.METHOD_SHA512)))'
    root_password: '$6$sZwtWE3MhAvBUr.V$u60eTalzbW0Uepc1x1.8dTXbva0AXpnFEG/CcvtSTPs5hFIBJiOVLQ8T6MUYXkHsKNpov5uLfJSdiy9rWGWgm.'
    ansible_user: ansible
    ansible_password: '$6$HknTiJsj26WbpOz1$MKG7Dss/e56whMwCXpwWVgtaRa/WV.KAu906icYKFToY.BCgpd/6WpeAoeQTf/yJYnlsHxVZsHJd5QEGdy6uy0'
    shared_publickey: 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCg1vhiQsVOpZRF7yfDXd6xHTSFlk87GZWHRsC0kOz8w75O3wrpvYoxaR8f82SphlkbkKo7Ccr/DaTGxxQzxuyX+hzBp377whSm/hkEpZfp/8s8eMXyWWJyDh9cOYy5c59aI2Z8qb0yTfbgc2StILF/3j5dh6P3GybG2oz++u+aSqeARNlLfccSwV0A+7NA5ZVP/rto6611izn/S4VB+GeX0MvlNRcEFrbm8vMlf30cmj1gvRymqZDXEgnL81jdaQn+FMWQFUP1aQC6Hp1aSxZABCsMT6XP6keCz3ph7KCkkJKNWqxwdezFx2MYQtyQqClIgfnry/mhBW/kYcgWGTWZansible@fed26.rhlab.net'

  tasks:
    - name: Change root password
      user:
        name=root
        password={{ root_password }}

    - name: Check if ansible user already exists
      command: getent passwd {{ ansible_user }}
      register: ansible_user_exists
      ignore_errors: yes

    - name: Add my ansible user
      user:
        name={{ ansible_user }}
        password={{ ansible_password }}
        shell=/bin/bash
        groups=wheel
        append=yes
      when: ansible_user_exists.rc != 0

    - name: Add my ansible user's public key to the remote server
      authorized_key: 
        user: {{ ansible_user }}
        key: "{{ lookup('file', "../files/ansible_user.pub") }}
        state: present
        manage_dir: yes
        delegate_to: "{{ item }}"
        with_items: "{{ groups['servers'] }}"
      when: ansible_user_exists.rc != 0

    - name: Add anserv user to sudoers file
      lineinfile:
        dest: /etc/sudoers
        state: present
        line: '{{ ansible_user }} ALL=(ALL) NOPASSWD: ALL'
        insertafter: '# %wheel'
      when: ansible_user_exists.rc != 0

    - name: Disallow root SSH access
      lineinfile: dest=/etc/ssh/sshd_config
                   regexp="^PermitRootLogin"
                   line="PermitRootLogin no"
                   state=present
      notify: Restart ssh


    - name: Disallow SSH password authentication
      lineinfile: dest=/etc/ssh/sshd_config
                  regexp="^PasswordAuthentication"
                  line="PasswordAuthentication no"
                  state=present
      notify: Restart ssh

    - name: Disallow SSH GSS API authentication
      lineinfile: dest=/etc/ssh/sshd_config
                  regexp="^GSSAPIAuthentication"
                  line="GSSAPIAuthentication no"
                  state=present
      notify: Restart ssh


    - name: install cronie package
      yum: name=cronie state=installed
      tags: cronie

    - name: enable cron(ie) service
      service: name=crond state=started enabled=yes
      tags: cronie

    - name: install yum-cron package
      yum: name=yum-cron state=installed
      tags: yum-cron

    - name: copy yum-cron.conf
      template: src=yum-cron.conf.j2 dest=/etc/yum/yum-cron.conf
      tags: yum-cron

    - name: enable yum-cron service
      service: name=yum-cron state=started enabled=yes
      tags: yum-cron